# File: .github/workflows/deploy.yml
name: Deploy Nginx Config

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up SSH for remote deployment
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Create templated config
        run: |
          # Criar diretório temporário
          mkdir -p tmp
          
          # Substituir variáveis no arquivo de configuração
          envsubst < grafana.conf > tmp/grafana.conf
          
          # Debug: mostrar o conteúdo do arquivo gerado
          echo "Generated config file content:"
          cat tmp/grafana.conf
        env:
          DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
          SSL_CERTIFICATE_PATH: "/etc/letsencrypt/live/${{ secrets.DOMAIN_NAME }}/fullchain.pem"
          SSL_CERTIFICATE_KEY_PATH: "/etc/letsencrypt/live/${{ secrets.DOMAIN_NAME }}/privkey.pem"
          HSTS_MAX_AGE: "31536000"
          SSL_PROTOCOLS: "TLSv1.2 TLSv1.3"
          SSL_CIPHERS: "ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256"

      - name: Copy Nginx configuration to server
        run: |
          scp -o StrictHostKeyChecking=no tmp/grafana.conf ec2-user@${{ secrets.SERVER_ADDRESS }}:/tmp/

      - name: Move Nginx config and set permissions
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.SERVER_ADDRESS }} "sudo mv /tmp/grafana.conf /etc/nginx/conf.d/ && sudo chown root:root /etc/nginx/conf.d/grafana.conf"

      - name: Test Nginx configuration
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.SERVER_ADDRESS }} "sudo nginx -t"

      - name: Restart Nginx
        if: success()
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.SERVER_ADDRESS }} "sudo systemctl restart nginx"
